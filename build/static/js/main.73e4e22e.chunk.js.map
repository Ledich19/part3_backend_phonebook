{"version":3,"sources":["components/Filter.jsx","components/PersonsForm.jsx","components/Persons.jsx","services/persons.js","components/Notification.jsx","App.js","index.js"],"names":["Filter","handlChengeeFilter","value","onChange","PersonsForm","handleChengeName","handleChengeNumber","addPerson","newName","newNumber","onSubmit","type","Persons","personShow","removePerson","map","person","name","number","onClick","id","url","personsServices","getAll","axios","get","then","response","data","postPerson","post","deletePerson","delete","update","newObject","put","Notification","message","isError","className","App","useState","persons","setPersons","setNewName","setNewNumber","findPerson","setfindPerson","infoMessage","setInfoMessage","setIsError","useEffect","allPerson","filter","toUpperCase","includes","event","target","preventDefault","findIndex","window","confirm","find","p","newPerson","returnPerson","setTimeout","catch","error","concat","n","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73e4e22e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({ handlChengeeFilter, value }) => {\r\n\treturn <div>\r\n\t\tfilter shown with: <input onChange={handlChengeeFilter} value={value} />\r\n\t</div>\r\n}\r\n\r\nexport default Filter","import React from \"react\";\r\n\r\nconst PersonsForm = ({ handleChengeName, handleChengeNumber, addPerson, newName, newNumber }) => {\r\n\treturn <form onSubmit={addPerson} >\r\n\t\t<div>\r\n\t\t\tname: <input onChange={handleChengeName} value={newName} />\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tnumber: <input type=\"tel\" onChange={handleChengeNumber} value={newNumber} />\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<button type=\"submit\">add</button>\r\n\t\t</div>\r\n\t</form>\r\n}\r\n\r\nexport default PersonsForm","import React from \"react\";\r\n\r\nconst Persons = ({ personShow , removePerson}) => {\r\n\treturn <div>\r\n    {\r\n    personShow.map(person => \r\n    <div key={person.name} >\r\n      {person.name}: {person.number}\r\n      <button onClick={() => removePerson(person.id,person.name)}>\r\n        delete\r\n      </button>\r\n      </div>)\r\n    }\r\n  </div>\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\n\r\nconst url = '/api/person'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(url)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst postPerson = (person) => {\r\n    const request = axios.post(url, person)\r\n    return request.then(response => response.data)\r\n}\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${url}/${id}`)\r\n    return request.then(response => response)\r\n}\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${url}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst personsServices = {\r\n    getAll,\r\n    postPerson,\r\n    deletePerson,\r\n    update,\r\n}\r\nexport default personsServices","import React from 'react'\r\n\r\nconst Notification = ({ message , isError}) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div className={isError ? \"error\" : \"info\"}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonsForm from './components/PersonsForm'\nimport Persons from './components/Persons'\nimport personsServices from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber ] = useState('')\n  const [findPerson, setfindPerson ] = useState('')\n  const [infoMessage,setInfoMessage] = useState(null)\n  const [isError,setIsError] = useState(false)\n  const handleChengeName = (event) => setNewName(event.target.value);\n  const handleChengeNumber = (event) => setNewNumber(event.target.value);\n  const handlChengeeFilter = (event) => setfindPerson(event.target.value);\n  useEffect(() => {\n    personsServices\n    .getAll()\n    .then(allPerson => setPersons(allPerson))\n  },[])\n  \n  const addPerson = (event) => {\n    event.preventDefault()\n    const find = persons.findIndex(person => person.name.toUpperCase() === newName.toUpperCase())\n    \n    if  (find >= 0) {\n      const confirm = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one`)\n      if (confirm) {\n        const person = persons.find(p => p.name.toUpperCase() === newName.toUpperCase())\n        const newPerson = {...person, number: newNumber}\n        personsServices\n        .update(person.id,newPerson)\n        .then(returnPerson => {\n          setPersons(persons.map(p => p.name!==newName ? p : returnPerson))\n          setNewName('')\n          setNewNumber('')\n          setInfoMessage(`replaced number ${newName}`)\n          setTimeout(() => setInfoMessage(null),2000)\n        }).catch(error => {\n          setInfoMessage(`Information of ${newName} has already been removed from server`)\n          setIsError(true)\n          setPersons(persons.filter(p => p.name !== newName))\n          setTimeout(() => {\n            setInfoMessage(null)\n            setIsError(false)\n          },2000)\n        }\n          \n        )\n\n      }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n      }\n      personsServices\n      .postPerson(newPerson)\n      .then(newPerson=> {\n        setPersons(persons.concat(newPerson))\n        setNewName('')\n        setNewNumber('')\n        setInfoMessage(`Added ${newName}`)\n        setTimeout(() => setInfoMessage(null),2000)\n      })\n    }\n  }\n\n  const removePerson = (id,name) => {\n    const confirm = window.confirm(`Delete ${name} ?`)\n    if (confirm) {\n      personsServices\n      .deletePerson(id)\n      .then(setPersons(persons.filter(n => n.id !== id) ))\n    }\n  }\n\n const personShow = !findPerson\n  ? persons\n  : persons.filter(person => person.name.toUpperCase().includes(findPerson.toUpperCase()))\n\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Filter handlChengeeFilter={handlChengeeFilter} value={findPerson}/>\n      <h2>add a new</h2>\n      <Notification message={infoMessage} isError={isError}/>\n      <PersonsForm \n        handleChengeName={handleChengeName}\n        handleChengeNumber={handleChengeNumber}\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons personShow={personShow} removePerson={removePerson}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}